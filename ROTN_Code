# CodeSkulptor runs Python programs in your browser.
# Click the upper left button to run this simple demo.
 
# CodeSkulptor is tested to run in recent versions of
# Chrome, Firefox, and Safari.
 
import simplegui
import random
 
#Welcome
message = "My Clan has Disowned me,"
message1 = "My wife has left me,"
message2 = "My brothers are dead..."
message3 = "...I know what must be done..."
message4 = "I must get my revenge"
message5 = "Welcome to revenge of the ninja"
yeet = "Die you dog"
welcome = True
melee = False
intro = True 


#Key Handles
UP = False
DOWN = False
LEFT = False
RIGHT = False

BLOCK = False
LEFTSTRIKE = False
RIGHTSTRIKE = False
POWERMOVE = False

#Player Attack Animations
action_image = None
action_timer = 0
 
#General
timer = 0
star_timer = 0

star_count = 10

quip_timer = 180
intro_timer = 170

 
#images:

welcome_background = simplegui.load_image("https://i.pinimg.com/originals/4d/c6/47/4dc64744eb81d936e20b6800b3b5a8b7.jpg")
 
opponent_clone_1 = simplegui.load_image("https://raw.githubusercontent.com/ekoren/ekoren.github.io/main/Small_samura.png")

pekka_texture = simplegui.load_image("https://ekoren.github.io/pekka.jpeg")
pekka_block = simplegui.load_image("https://raw.githubusercontent.com/ekoren/ekoren.github.io/main/Pekka(Block).png")
pekka_punch = simplegui.load_image("https://ekoren.github.io/pekka_punch.jpeg")
pekka_strike_left = simplegui.load_image("https://ekoren.github.io/pekka_strike_left..jpeg")
pekka_strike_right = simplegui.load_image("https://ekoren.github.io/pekka_strike_right.jpeg")

samura_stand = simplegui.load_image("https://ekoren.github.io/samurai_stand.png")
samura_dead = simplegui.load_image("https://ekoren.github.io/sam_is_literally_dead.png")

ninja2 = simplegui.load_image("https://ekoren.github.io/Sam_strike_right.png")
ninja1 = simplegui.load_image("https://raw.githubusercontent.com/ekoren/ekoren.github.io/main/Sam_strike_left.png")
ninja_stand = simplegui.load_image("https://raw.githubusercontent.com/ekoren/ekoren.github.io/main/Sam_Dodge.png")
ninja_star = simplegui.load_image("https://ekoren.github.io/ninja_star.png")
ninja_leftstrike = simplegui.load_image("https://ekoren.github.io/pixil-frame-2 (1).png")
ninja_rightstrike = simplegui.load_image("https://ekoren.github.io/pixil-frame-3.png")
ninja_powermove = simplegui.load_image("https://ekoren.github.io/pixil-frame-1 (2).png")
ninja_block = simplegui.load_image("https://i.pinimg.com/originals/42/65/95/42659539a84de9a8a6aeec22ba9dcafa.jpg") 
 
class Ninja:
    
    def __init__(self):
        self.strength = 10
        self.speed = 5
        self.health = 100
        self.image = ninja_stand
        self.x = 200
        self.y = 150
        self.star_throw = False
        self.star_fly = False
        self.dir_x = 1
        self.star_used = True
        self.star_dir_x = 1
        self.pos = [self.x, self.y]
        self.star_pos = [0,0]
        self.star_count = star_count
        
    def move(self):
        if RIGHT == True:
            self.x += self.speed
            self.dir_x = 1
            
        if LEFT == True:
            self.x -= self.speed
            self.dir_x = -1
            
        if UP == True:
            self.y -= self.speed
            
        if DOWN == True:
            self.y += self.speed
            
        if self.x > 400:
            self.x = 0
        if self.x < 0:
            self.x = 400
            
        if self.y > 300:
            self.y = 0
        if self.y < 0:
            self.y = 300
            
        self.pos = [self.x, self.y]
        
    def playerinput(self):
        global action_image,action_timer
        if BLOCK:
            action_image = ninja_block
            action_timer = 60
        if LEFTSTRIKE:
            action_image = ninja_leftstrike
            action_timer = 30
        if RIGHTSTRIKE:
            action_image = ninja_rightstrike
            action_timer = 30
        if POWERMOVE:
            action_image = ninja_powermove
            action_timer = 45
     
    
    def draw(self, canvas):
        if self.image == ninja_stand:
            canvas.draw_image(self.image, (249, 332), (499, 665), (self.x, self.y), (50, 50))
        elif self.image == ninja1:
            canvas.draw_image(self.image, (158, 211), (316, 422), (self.x, self.y), (50, 50))
        elif self.image == ninja2:
            canvas.draw_image(self.image, (158, 211), (316, 422), (self.x, self.y), (50, 50))
 
            
            
    def throw_star(self, canvas):
        global star_timer, star_throw, star_count, LEFT, RIGHT
        
        if self.star_throw == True and self.star_count > 0:
            samura.hit = False
            self.star_fly = True
            self.star_used = False
            if RIGHT == True:
                self.image = ninja2
            elif LEFT == True:
                self.image = ninja1
            star_timer = 60
            self.star_count -= 1
            self.star_x = self.x
            self.star_y = self.y
            self.star_pos = [self.star_x, self.star_y]
        
            
        if star_timer > 0 and self.star_count > 0:
            self.star_throw = False
            star_timer -= 1
            self.star_x += (self.speed + 2)*self.star_dir_x
            
            canvas.draw_image(ninja_star, (430, 281), (860, 562), (self.star_x, self.star_y), (5, 5))
        
        else:
            self.image = ninja_stand
        
    
        
class Opponent:
    def __init__(self, strength, speed, health, image, size):
        self.strength = strength
        self.speed = speed
        self.health = health
        self.image = image
        self.enemy = ""
        self.timer = 0
        self.dir_x = 1
        self.dir_y = 1
        self.size = size
        self.star_hits = 0
        self.x = random.randint(0,400)
        self.y = random.randint(0,300)
        self.pos = [80, 170]
        self.hit = False
        self.fight = False
        
    def move(self):
        
        if self.timer > 0:
            self.timer -= 1
        else:
            self.timer = 90
            self.dir_x = random.randint(-10, 10)
            self.dir_y = random.randint(-10, 10)
        
        self.x += self.dir_x*self.speed/20
        self.y += self.dir_y*self.speed/20
        
        if self.x > 400:
            self.x = 0
        if self.x < 0:
            self.x = 400
            
        if self.y > 300:
            self.y = 0
        if self.y < 0:
            self.y = 300
            
        self.pos = [self.x, self.y]
        

        if self.hit == False and dist(ninja.star_pos, self.pos) < 100:
            self.health -= 10
            self.hit = True
            if self.health == 0:
                star_count = 5

        if ninja.star_fly == True:
            if ninja.star_used == False:
                if self.enemy == "samura":
                    if self.hit == False and dist(ninja.star_pos,self.pos) > 15:
                        self.health -= 10
                        self.hit = True
                        self.star_hits += 1
                        ninja.star_used = True
                if self.enemy == "pekka":
                    if self.hit == False and dist(ninja.star_pos,self.pos) > 25:
                        self.health -= 10
                        self.hit = True
                        self.star_hits += 1
                        ninja.star_used = True
        if self.health <= 0:
            ninja.star_count += self.star_hits
            self.star_hits = 0

           
    def draw(self, canvas):
        if self.image == opponent_clone_1:
            canvas.draw_image(self.image, (333, 332), (665, 665), (self.x, self.y), self.size)
        if self.image == pekka_texture:
            canvas.draw_image(self.image, (261, 239), (522, 478), (80, 170), self.size)
        if self.image == pekka_block:
            canvas.draw_image(self.image, (440, 562), (880, 1133), (self.x, self.y), self.size)
        if self.image == pekka_punch:
            canvas.draw_image(self.image, (460, 380), (920, 759), (self.x, self.y), self.size)
        if self.image == pekka_strike_left:
            canvas.draw_image(self.image, (132, 145), (265, 190), (self.x, self.y), self.size)
        if self.image == pekka_strike_right:
            canvas.draw_image(self.image, (450, 323), (900, 647), (self.x, self.y), self.size)
        if self.image == samura_stand:
            canvas.draw_image(self.image, (256, 256), (512, 512), (self.x, self.y), self.size)
            
        canvas.draw_text(str(self.health),[350, 50], 12, 'blue')
    
        
ninja = Ninja()
samura = Opponent(3, 4, 25, opponent_clone_1, (50, 50))
pekka = Opponent(10, 2, 100, pekka_texture, (80, 80))
        
def start():
    global welcome
    welcome = False
    samura.fight = True

def dist(point1, point2):
    distance = ((point1[0] - point2[0])**2 + (point1[1] - point2[1])**2)**.5
    return distance
 
# Handler to draw on canvas
def draw(canvas):
    global melee, intro, intro_timer, action_image, action_timer
    
    canvas.draw_text(str(ninja.health),[50, 50], 12, 'blue')
    canvas.draw_text(str(ninja.star_count),[200, 50], 12, 'red')
        
    
    if welcome == True:

        
        canvas.draw_image(welcome_background, (640, 360), (1280, 720), (200, 150), (400, 300))
        canvas.draw_text(message, [50,112], 24, "Red")
        
    elif intro == True:
        canvas.draw_image(welcome_background, (640, 360), (1280, 720), (200, 150), (400, 300))
        canvas.draw_text(message1, [10,112], 24, "Blue")
        canvas.draw_text(message2, [80,135], 24, "Blue")
        canvas.draw_text(message3, [80,155], 24, "Blue")
        canvas.draw_text(message4, [80,175], 24, "Blue")
        canvas.draw_text(message5, [80,205], 24, "Blue")
        intro_timer -= 1               
        if intro_timer == 0:
            intro = False
        
        
    elif melee == False and samura.fight == True:
  
            
        ninja.draw(canvas)
        ninja.move()
        samura.enemy = "samura"
        ninja.throw_star(canvas)
        
        samura.draw(canvas)
        samura.move()
        
        if samura.health == 0:
            samura.fight = False
            pekka.fight = True
        
        if dist(ninja.pos, samura.pos) < 20:
            melee = True
            
    elif melee == True and samura.fight == True:
        global quip_timer
        if quip_timer > 0:
            quip_timer -= 1
            canvas.draw_text(yeet, [250, 100], 24, 'orange')
            
        #ninja.draw(canvas)
        #ninja.move()
        samura.size = (300, 300)
        samura.x = 200
        samura.y = 150
        samura.image = samura_stand
        samura.draw(canvas)
        #samura.move()
        
    
    elif melee == False and pekka.fight == True:
        pekka.draw(canvas)
        pekka.move()
        ninja.draw(canvas)
        ninja.move()
        ninja.throw_star(canvas)
        pekka.enemy = "pekka"
    
    elif melee == True and pekka.fight == True:
        pekka.size = (500, 500)
        pekka.x = 200
        pekka.y = 150
        pekka.draw(canvas)
    
    #Action Animation for Melee
    if action_timer > 0:
        action_timer -= 1
    else:
        action_image = None
    ninja.playerinput() 
    if action_image != None and melee:
        canvas.draw_image(action_image, (action_image.get_width()/2,action_image.get_height()/2), (action_image.get_width(), action_image.get_height()),(200,150),(400,300))
    
    
def keyup_handler(key):
    
    global UP, DOWN, LEFT, RIGHT, BLOCK, LEFTSTRIKE, RIGHTSTRIKE, POWERMOVE
    
    if key == simplegui.KEY_MAP["a"]:
        LEFT = False
    
    if key == simplegui.KEY_MAP["d"]:
        RIGHT = False
    
    if key == simplegui.KEY_MAP["w"]:
        UP = False
    
    if key == simplegui.KEY_MAP["s"]:
        DOWN = False
        
    if key == simplegui.KEY_MAP["space"]:
        ninja.star_throw = False
    
    if key == simplegui.KEY_MAP["f"]:
        BLOCK = False
        
    if key == simplegui.KEY_MAP["q"]:
        LEFTSTRIKE = False
        
    if key == simplegui.KEY_MAP["e"]:
        RIGHTSTRIKE = False
    
    if key == simplegui.KEY_MAP["r"]:
        POWERMOVE = False
    
def keydown_handler(key):
    
    global UP, DOWN, LEFT, RIGHT, star_throw, star_count, BLOCK, LEFTSTRIKE, RIGHTSTRIKE, POWERMOVE
    
    if key == simplegui.KEY_MAP["a"]:
        LEFT = True
    
    if key == simplegui.KEY_MAP["d"]:
        RIGHT = True
    
    if key == simplegui.KEY_MAP["w"]:
        UP = True
    
    if key == simplegui.KEY_MAP["s"]:
        DOWN = True
        
    if key == simplegui.KEY_MAP["space"] and star_count > 0:
        ninja.star_throw = True
        ninja.star_dir_x = ninja.dir_x
        samura.hit = False
        pekka.hit = False
        
    if key == simplegui.KEY_MAP["f"]:
        BLOCK = True
        
    if key == simplegui.KEY_MAP["q"]:
        LEFTSTRIKE = True
        
    if key == simplegui.KEY_MAP["e"]:
        RIGHTSTRIKE = True
    
    if key == simplegui.KEY_MAP["r"]:
        POWERMOVE = True
        
        
# Create a frame and assign callbacks to event handlers
frame = simplegui.create_frame("ROTN", 400, 300)
frame.add_button("Start", start)
frame.set_draw_handler(draw)
frame.set_keyup_handler(keyup_handler)
frame.set_keydown_handler(keydown_handler)
 
# Start the frame animation
frame.start()
